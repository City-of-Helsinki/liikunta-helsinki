@use "breakpoints";
@import "variables";

.wrapper {
  grid-column: 1 / -1 !important;
  display: grid;
  grid-template-columns:
    [full-width-start] 1fr
    [content] minmax(auto, 1470px)
    1fr [full-width-end];

  & > * {
    grid-column: 2;
  }

  &::before {
    content: " ";
    display: block;
    grid-column: full-width;
    grid-row: 1;
    min-height: 31rem;

    @include breakpoints.respond-above(m) {
      background-color: #ccf7ed;
    }
  }

  & > *:first-child {
    grid-row: 1;
  }
}

.layout {
  display: grid;
  grid-template-columns: [control content aside] 1fr;
  grid-template-rows:
    [control] auto
    [full content] auto
    [aside] auto;
  padding: 0 $spacing-xs;

  @include breakpoints.respond-above(m) {
    grid-template-columns:
      [control] 2.5rem
      [content] 1fr
      [aside] 1fr;
    grid-template-rows: [control content aside] 1fr;

    column-gap: $spacing-layout-s;
  }

  @include breakpoints.respond-above(m) {
    column-gap: $spacing-layout-m;
  }
}

.backToSearch {
  grid-area: control !important;
  width: 2.5rem;
  height: 2.5rem;
  margin: $spacing-m 0;
  display: flex;
  align-items: center;
  justify-content: center;

  color: $color-black;

  background: $color-white;
  border-radius: 0;
  border: none;
  cursor: pointer;

  @include breakpoints.respond-above(m) {
    justify-self: flex-end;
  }
}

.header {
  & > .image {
    grid-area: content;
    margin: 0 calc(-1 * #{$spacing-xs});
    position: relative;
    height: 24rem;

    @include breakpoints.respond-above(m) {
      grid-area: content;
      margin: 0;
      height: unset;
    }
  }
  & > .content {
    grid-area: aside;
  }

  .image {
    max-width: 100vw;
    overflow: hidden;

    @include breakpoints.respond-above(m) {
      height: 100%;
    }

    background-color: #e0faf4;

    & > * {
      max-height: 31rem;
    }
  }
  .content {
    --spacing-v: #{$spacing-m};

    padding: var(--spacing-v) 0;
    display: flex;
    flex-direction: column;

    & > *:not(:last-child) {
      margin-bottom: var(--spacing-v);
    }

    @include breakpoints.respond-above(m) {
      --spacing-v: #{$spacing-layout-l};

      & > *:not(:last-child) {
        margin-bottom: $spacing-m;
      }

      & > h2:not(:last-child) {
        margin-bottom: $spacing-2-xl;
      }
    }
  }

  .keywords {
    padding: 0;
    margin: 0;
    list-style-type: none;
    display: flex;
    flex-wrap: wrap;
  }

  .headerInfoLines {
    padding: 0;
    margin: 0;
    list-style-type: none;
    display: flex;
    flex-direction: column;

    & > *:not(:last-child) {
      margin-bottom: $spacing-xs;
    }

    .headerInfoLine {
      display: flex;
      align-items: flex-start;

      & > svg {
        width: 24px;
        flex-shrink: 0;
        margin-right: $spacing-xs;
      }
    }
  }
}

.contentSection {
  padding-top: $spacing-m;
  padding-bottom: $spacing-m;
  width: 100%;

  .aside {
    grid-area: content;

    @include breakpoints.respond-above(m) {
      grid-area: aside;
    }

    & > * {
      margin-bottom: $spacing-2-xl;
    }
  }

  .content {
    grid-area: aside;

    @include breakpoints.respond-above(m) {
      grid-area: content;
    }

    & > *:not(:last-child) {
      margin-bottom: $spacing-m;
    }

    .description {
      font-weight: 600;
    }
  }
}

.accessibilitySentences {
  margin-top: -$spacing-s;

  @include breakpoints.respond-above(s) {
    margin-top: -$spacing-2-xs;
  }

  .accessibilityTitle {
    display: flex;
    align-items: center;
    color: $color-tram-dark;
    font-weight: 700;
    font-size: 1.2rem;

    &:hover {
      cursor: pointer;
    }
  }

  .icon {
    margin-left: $spacing-s;
  }

  .groupName {
    font-weight: 700;
    margin: $spacing-xs 0 $spacing-xs;
  }

  > div {
    padding-left: $spacing-xs;
  }

  // Apply list styles to InfoBlock.List
  > div > ul {
    list-style: disc outside;
    margin-left: $spacing-s;
    padding-left: $spacing-s;
    font-size: $fontsize-body-s;
  }

  > div > ul > li:last-child {
    margin-bottom: $spacing-xs;
  }
}
